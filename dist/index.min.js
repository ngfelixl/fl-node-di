"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),require("reflect-metadata");const inversify_1=require("inversify");function FlModule(e){return function(t){let n=new inversify_1.Container({defaultScope:"Singleton"});if(e.providers){const t=e.providers.reduce((e,t)=>Array.isArray(t)?[...e,...t]:[...e,t],[]);for(let e=0;e<t.length;e++)n.bind(t[e]).to(t[e])}if(e.imports&&e.imports.length>0){const t=e.imports.reduce((e,t)=>Array.isArray(t)?[...e,...t]:[...e,t],[]),r=[];for(let e=0;e<t.length;e++){const o=new t[e];if(r.push(o),Reflect.hasMetadata("exports",o.container)){const e=Reflect.getMetadata("exports",o.container);for(let t=0;t<e.length;t++)n.bind(e[t]).to(e[t])}r[e].container.parent=n}for(let e=0;e<r.length;e++){const t=r[e];if(Reflect.hasMetadata("declarations",t.container)){const e=Reflect.getMetadata("declarations",t.container);for(let n=0;n<e.length;n++)t.container.get(e[n])}}}if(e.exports){const t=e.exports.reduce((e,t)=>Array.isArray(t)?[...e,...t]:[...e,t],[]);Reflect.defineMetadata("exports",t,n)}if(e.declarations){const t=e.declarations.reduce((e,t)=>Array.isArray(t)?[...e,...t]:[...e,t],[]);for(let e=0;e<t.length;e++)n.bind(t[e]).toSelf();Reflect.defineMetadata("declarations",t,n)}return class extends t{constructor(){super(...arguments),this.container=n}}}}function Injectable(){return inversify_1.injectable()}function Component(){return inversify_1.injectable()}function Inject(e){return inversify_1.inject(e)}exports.FlModule=FlModule,exports.Injectable=Injectable,exports.Component=Component,exports.Inject=Inject;